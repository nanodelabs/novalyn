[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.30.0"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "MuntasirSZN/homebrew-programs"
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
  "aarch64-apple-darwin",
  "aarch64-unknown-linux-gnu",
  "arm-unknown-linux-musleabihf",
  "armv7-unknown-linux-musleabihf",
  "x86_64-apple-darwin",
  "x86_64-unknown-linux-gnu",
  "x86_64-pc-windows-msvc",
  "i686-unknown-linux-musl",
]
# A namespace to use when publishing this package to the npm registry
npm-scope = "@nanodelabs"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Publish jobs to run in CI
publish-jobs = ["npm", "homebrew"]
# Whether to install an updater program
install-updater = false

[dist.github-custom-runners]
global = "ubuntu-latest"

[dist.github-action-commits]
"actions/checkout" = "08c6903cd8c0fde910a37f88322edcfb5dd907a8"
"actions/upload-artifact" = "ea165f8d65b6e75b540449e92b4886f43607fa02"
"actions/download-artifact" = "634f93cb2916e3fdff6788551b99b062d0335ce0"
"actions/setup-node" = "2028fbc5c25fe9cf00d9f06a71cc4710d4507903"
